<?xml version="1.0" ?>
<launch>

    <arg name="panda_1_hand" default="panda_gelslim"/>
    <arg name="panda_2_hand" default="panda_gelslim"/>

    <arg name="robot" default="$(find mmint_franka_description)/robots/mmint_combined_panda.urdf.xacro"/>

    <arg name="args" default=""/>

    <arg name="robot_id" default="combined_panda"/>

    <arg name="hw_config_file" default="$(find franka_control)/config/franka_combined_control_node.yaml"/>

    <arg name="robot_ips"/>

    <arg name="arm_id" default="panda_2" />

    <arg name="controllers_file" default="$(find mmint_franka_control)/config/panda_combined_controllers.yaml"/>

    <!-- OLD -->
    <!-- <arg name="controllers_to_start"
         default="panda_1_state_controller panda_2_state_controller effort_joint_trajectory_controller_panda_1 effort_joint_trajectory_controller_panda_2"/> -->

    <!-- NEW -->
    <arg name="controllers_to_start" default="panda_1_state_controller panda_2_state_controller"/>

    <arg name="joint_states_source_list" default="[panda_1_state_controller/joint_states, panda_2_state_controller/joint_states, panda_1/franka_gripper/joint_states, panda_2/franka_gripper/joint_states]"/>

    <node name="$(arg robot_id)" pkg="franka_control" type="franka_combined_control_node" output="screen" required="true">
        <rosparam command="load" file="$(arg hw_config_file)"/>
        <!-- Add or overwrite manually configured ips -->
        <rosparam subst_value="True">$(arg robot_ips)</rosparam>
        <param name="robot_description" command="xacro $(arg robot) hand_1:=$(arg panda_1_hand) hand_2:=$(arg panda_2_hand) $(arg args)"/>
    </node>


    <group ns="$(arg robot_id)">
        <rosparam command="load" file="$(arg controllers_file)"/>
        <node name="hw_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
              args="$(arg controllers_to_start)"/>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
        <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
            <param name="robot_description"
                   command="xacro $(arg robot) hand_1:=$(arg panda_1_hand) hand_2:=$(arg panda_2_hand) $(arg args)"/>
            <rosparam param="source_list" subst_value="true">$(arg joint_states_source_list)</rosparam>
            <param name="rate" value="30"/>
        </node>

        <group if="$(eval arg('panda_1_hand') == 'panda_hand')" ns="panda_1">
            <include file="$(find franka_gripper)/launch/franka_gripper.launch">
                <arg name="robot_ip" value="192.168.1.22"/>
                <arg name="arm_id" value="panda_1"/>
            </include>
        </group>

        <group if="$(eval arg('panda_2_hand') == 'panda_hand')" ns="panda_2">
            <include file="$(find franka_gripper)/launch/franka_gripper.launch">
                <arg name="robot_ip" value="192.168.1.23"/>
                <arg name="arm_id" value="panda_2"/>
            </include>
        </group>
    </group>


    <group ns="$(arg robot_id)">
        <rosparam command="load" file="$(arg controllers_file)"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="cartesian_impedance_example_controller_jayjun"/>

        <node name="interactive_marker" pkg="franka_example_controllers" type="interactive_marker.py" required="true" output="screen">
        <!-- <node name="interactive_marker" pkg="franka_example_controllers" type="track_waypoints.py" required="true" output="screen"> -->
            <param name="link_name" value="base" />
            <remap from="equilibrium_pose" to="/cartesian_impedance_example_controller_jayjun/equilibrium_pose" />
        </node>

        <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" />
        <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_example_controllers)/launch/rviz/franka_description_with_marker_jayjun.rviz"/>

    </group>


    <!-- <rosparam command="load" file="$(find franka_example_controllers)/config/franka_example_controllers.yaml" /> -->
    <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="cartesian_impedance_example_controller"/> -->

    
</launch>
